-- Count of STUDENT_KNOWLEDGE_RECORDS for which KNOWLEDGE_LVL_TYPE = 'ESTIMATED"
WITH FIRST_STAGE (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT lsh.CONSTITUENT_LEARNING_STD_ID, lsh.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID
		FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		JOIN IBMSIH.SIHLEARNING_STANDARD_HIERARCHY lsh ON lsh.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT std_cont ON std_cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
			AND lsh.GRAPH_TYPE = 'PROGRESSION'),
	SECOND_STAGE  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.LEARNING_STANDARD_ID
		WHERE prog.GRAPH_TYPE = 'PROGRESSION'),
	COURSE_GRAPH_EDGES (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT * FROM SECOND_STAGE UNION
		SELECT * FROM FIRST_STAGE),
	COURSE_GRAPH_VERTICES (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT cge.CONSTITUENT_LEARNING_STD_ID AS LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge UNION
		SELECT cge.LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge),
	STD_COUNT_COURSE (SIH_COURSEPK_ID, STD_COUNT_COURSE) AS (
		SELECT cgv.SIH_COURSEPK_ID, COUNT(*) AS STD_COUNT_COURSE
		FROM COURSE_GRAPH_VERTICES cgv
		GROUP BY cgv.SIH_COURSEPK_ID),
	COURSE_ENROLLEES (SIH_COURSEPK_ID, SIH_PERSONPK_ID) AS (
		SELECT DISTINCT crs.SIH_COURSEPK_ID, opr.SIH_PERSONPK_ID
		FROM IBMSIH.SIHCOURSE crs
		JOIN IBMSIH.COURSE_SECTION sec ON sec.SIH_COURSEPK_ID = crs.SIH_COURSEPK_ID
		JOIN IBMSIH.COURSE_SECTION_STUDENT stud ON stud.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
		JOIN IBMSIH.SIHORGPERSONROLE opr ON opr.SIH_ORG_PERSON_ROLEPK_ID = stud.SIH_ORG_PERSON_ROLEPK_ID
			AND stud.IS_ACTIVE_YN = '1'
			AND sec.IS_ACTIVE_YN = '1'),
	BODY_OF_EVIDENCE (SIH_PERSONPK_ID, WORK_PRODUCT_TITLE, LEARNING_STANDARD_ID, 
					RAW_SCORE, EOL_MEAS_PK_ID, ASSESSMENT_DATE, EVIDENCE_OF_LEARNING_SID,
					SIH_COURSEPK_ID) AS (
		SELECT DISTINCT enrollee.SIH_PERSONPK_ID,wk_prod.WORK_PRODUCT_TITLE,eol.LEARNING_STANDARD_ID, 
						eol.RAW_SCORE, eol.EOL_MEAS_PK_ID, eol.ASSESSMENT_DATE,
						eol.EVIDENCE_OF_LEARNING_SID, cgv.SIH_COURSEPK_ID
		FROM COURSE_GRAPH_VERTICES cgv
		JOIN COURSE_ENROLLEES enrollee on enrollee.SIH_COURSEPK_ID = cgv.SIH_COURSEPK_ID
		JOIN IBMSIH.EOL_MEAS eol ON eol.SIHPERSON_PKID = enrollee.SIH_PERSONPK_ID 
			AND eol.LEARNING_STANDARD_ID = cgv.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHLEARNING_STANDARD lrn_std ON lrn_std.LEARNING_STANDARD_ID = cgv.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT std_cont ON std_cont.STANDARD_CONTENT_ID = lrn_std.STANDARD_CONTENT_ID
		JOIN IBMSIH.WORK_PRODUCT wk_prod ON wk_prod.WORK_PRODUCT_SID = eol.WORK_PRODUCT_SID),
	MEAS_COUNT_LRN_STD (SIH_COURSEPK_ID, LEARNING_STANDARD_ID, MEAS_COUNT_LRN_STD) AS (
		SELECT boe.SIH_COURSEPK_ID, boe.LEARNING_STANDARD_ID, COUNT(*) AS MEAS_COUNT_LRN_STD
		FROM BODY_OF_EVIDENCE boe
		GROUP BY boe.SIH_COURSEPK_ID, boe.LEARNING_STANDARD_ID),
	ENROLLEE_COUNT (SIH_COURSEPK_ID, ENROLLEE_COUNT) AS (
		SELECT crs.SIH_COURSEPK_ID, COUNT(*) AS ENROLLEE_COUNT
		FROM IBMSIH.SIHCOURSE crs
		JOIN IBMSIH.COURSE_SECTION sec ON sec.SIH_COURSEPK_ID = crs.SIH_COURSEPK_ID
		JOIN IBMSIH.COURSE_SECTION_STUDENT stud ON stud.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
			AND stud.IS_ACTIVE_YN = '1'
			AND sec.IS_ACTIVE_YN = '1'
		GROUP BY crs.SIH_COURSEPK_ID),
	MEAS_COUNT_TUPLE (SIH_COURSEPK_ID, MEAS_COUNT_TUPLE) AS (
		SELECT boe_tuple.SIH_COURSEPK_ID, COUNT(*) AS COURSE_MEAS_TUPLE
		FROM (SELECT DISTINCT boe.SIH_COURSEPK_ID, 
								boe.LEARNING_STANDARD_ID, 
								boe.SIH_PERSONPK_ID
				FROM BODY_OF_EVIDENCE boe) AS boe_tuple
		GROUP BY boe_tuple.SIH_COURSEPK_ID),
	MEAS_COUNT_BY_STUD (SIH_COURSEPK_ID, SIH_PERSONPK_ID, MEAS_COUNT_BY_STUD) AS ( -- Meas std count by (course, subj)  
		SELECT boe_tuple.SIH_COURSEPK_ID, boe_tuple.SIH_PERSONPK_ID, COUNT(*) AS MEAS_COUNT_BY_STUD 
		FROM (SELECT DISTINCT boe.SIH_COURSEPK_ID,  -- Distinct (course, std, subj) tuple
								boe.LEARNING_STANDARD_ID, 
								boe.SIH_PERSONPK_ID
				FROM BODY_OF_EVIDENCE boe) AS boe_tuple
		GROUP BY boe_tuple.SIH_COURSEPK_ID, boe_tuple.SIH_PERSONPK_ID),
	MEAS_COUNT_BY_STD (SIH_COURSEPK_ID, LEARNING_STANDARD_ID, MEAS_COUNT_BY_STD) AS ( -- Meas subj count by (course, std)
		SELECT boe_tuple.SIH_COURSEPK_ID, boe_tuple.LEARNING_STANDARD_ID, COUNT(*) AS MEAS_COUNT_BY_STD
		FROM (SELECT DISTINCT boe.SIH_COURSEPK_ID,  -- Distinct (course, std, subj) tuple
								boe.LEARNING_STANDARD_ID, 
								boe.SIH_PERSONPK_ID
				FROM BODY_OF_EVIDENCE boe) AS boe_tuple
		GROUP BY boe_tuple.SIH_COURSEPK_ID, boe_tuple.LEARNING_STANDARD_ID),
	AVG_PCT_STUD_MEAS (SIH_COURSEPK_ID, AVG_PCT_STUD_MEAS) AS (
		SELECT mcbs.SIH_COURSEPK_ID,
				ROUND(AVG(CAST(mcbs.MEAS_COUNT_BY_STD AS float)
					/CAST(enrollee.ENROLLEE_COUNT AS float)),2) AVG_PCT_STUD_MEAS
		FROM MEAS_COUNT_BY_STD mcbs
		JOIN ENROLLEE_COUNT enrollee ON enrollee.SIH_COURSEPK_ID = mcbs.SIH_COURSEPK_ID
		GROUP BY mcbs.SIH_COURSEPK_ID),
	AVG_PCT_STD_MEAS (SIH_COURSEPK_ID, AVG_PCT_STD_MEAS ) AS (
		SELECT mcbs.SIH_COURSEPK_ID,
		ROUND(AVG(CAST(mcbs.MEAS_COUNT_BY_STUD AS float)
					/CAST(scc.STD_COUNT_COURSE AS float)),2) AVG_PCT_STD_MEAS
		FROM MEAS_COUNT_BY_STUD mcbs
		JOIN STD_COUNT_COURSE scc ON scc.SIH_COURSEPK_ID = mcbs.SIH_COURSEPK_ID
		GROUP BY mcbs.SIH_COURSEPK_ID),
	AVG_PCT_EVID_COVG (SIH_COURSEPK_ID,AVG_PCT_EVID_COVG) AS (
		SELECT mct.SIH_COURSEPK_ID,
			ROUND(AVG(CAST(mct.MEAS_COUNT_TUPLE AS float)/
					(CAST(scc.STD_COUNT_COURSE AS float) * CAST(enrollee.ENROLLEE_COUNT AS float))),2) AS AVG_PCT_EVID_COVG
		FROM MEAS_COUNT_TUPLE mct
		JOIN STD_COUNT_COURSE scc ON scc.SIH_COURSEPK_ID = mct.SIH_COURSEPK_ID
		JOIN ENROLLEE_COUNT enrollee ON enrollee.SIH_COURSEPK_ID = mct.SIH_COURSEPK_ID
		GROUP BY mct.SIH_COURSEPK_ID ),
	EST_COUNT_TUPLE (SIH_COURSEPK_ID, EST_COUNT_TUPLE) AS (
		SELECT verts.SIH_COURSEPK_ID, COUNT(*) AS EST_COUNT_TUPLE
		FROM COURSE_GRAPH_VERTICES verts
		JOIN COURSE_ENROLLEES enrollees ON enrollees.SIH_COURSEPK_ID = verts.SIH_COURSEPK_ID
		JOIN (SELECT DISTINCT skl.SIH_PERSONPK_ID_ST AS SIH_PERSONPK_ID, skl.LEARNING_STANDARD_ID
			FROM IBMSIH.STUDENT_KNOWLEDGE_LEVEL skl
			WHERE skl.KNOWLEDGE_LVL_TYPE = 'ESTIMATED') est_tuple
				ON est_tuple.SIH_PERSONPK_ID = enrollees.SIH_PERSONPK_ID
					AND verts.LEARNING_STANDARD_ID = est_tuple.LEARNING_STANDARD_ID
		GROUP BY verts.SIH_COURSEPK_ID),
	AVG_PCT_EST_COVG (SIH_COURSEPK_ID , AVG_PCT_EST_COVG) AS (
		SELECT est_ct.SIH_COURSEPK_ID,  
			ROUND(AVG(CAST(est_ct.EST_COUNT_TUPLE AS float)/
					(CAST(scc.STD_COUNT_COURSE AS float) * CAST(enrollee.ENROLLEE_COUNT AS float))),2) AS AVG_PCT_EVID_COVG
		FROM EST_COUNT_TUPLE est_ct
		JOIN STD_COUNT_COURSE scc ON scc.SIH_COURSEPK_ID = est_ct.SIH_COURSEPK_ID
		JOIN ENROLLEE_COUNT enrollee ON enrollee.SIH_COURSEPK_ID = est_ct.SIH_COURSEPK_ID
		GROUP BY est_ct.SIH_COURSEPK_ID),
	MOST_RECENT_EST (SIH_COURSEPK_ID, MOST_RECENT_EST) AS (
		SELECT enrollees.SIH_COURSEPK_ID, rec_est.MOST_RECENT_EST
		FROM COURSE_ENROLLEES enrollees
		JOIN COURSE_GRAPH_VERTICES verts ON verts.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID 
			JOIN (SELECT skl.SIH_PERSONPK_ID_ST, skl.LEARNING_STANDARD_ID, 
						MAX(skl.LAST_UPDATE_DT) AS MOST_RECENT_EST
					FROM IBMSIH.STUDENT_KNOWLEDGE_LEVEL skl
					GROUP BY skl.SIH_PERSONPK_ID_ST, skl.LEARNING_STANDARD_ID ) rec_est
		ON rec_est.SIH_PERSONPK_ID_ST = enrollees.SIH_PERSONPK_ID
			AND rec_est.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID ),
	COURSE_GRADE_LVL (SIH_COURSEPK_ID, COURSE_GRADE_LVL) AS (
		SELECT DISTINCT clsm.SIH_COURSEPK_ID,  MIN(cont.GRADE_LEVEL) AS COURSE_GRADE_LVL
		FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
		GROUP BY clsm.SIH_COURSEPK_ID),
	SUBJECT_TITLE (SIH_COURSEPK_ID, SUBJECT_TITLE) AS (
		SELECT DISTINCT clsm.SIH_COURSEPK_ID, cont.SUBJECT_TITLE
		FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID	),
	MOST_RECENT_MEAS (SIH_COURSEPK_ID, MOST_RECENT_MEAS) AS (
		SELECT enrollees.SIH_COURSEPK_ID, rec_meas.MOST_RECENT_MEAS
		FROM COURSE_ENROLLEES enrollees
		JOIN COURSE_GRAPH_VERTICES verts ON verts.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
		JOIN (SELECT boe.SIH_PERSONPK_ID, boe.LEARNING_STANDARD_ID, 
					MAX(boe.ASSESSMENT_DATE) AS MOST_RECENT_MEAS
				FROM BODY_OF_EVIDENCE boe
				GROUP BY boe.SIH_PERSONPK_ID, boe.LEARNING_STANDARD_ID ) rec_meas
		ON rec_meas.SIH_PERSONPK_ID = enrollees.SIH_PERSONPK_ID
			AND rec_meas.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID )
SELECT org_name.NAME AS TENANT_NAME, subj.SUBJECT_TITLE,  
		grade.COURSE_GRADE_LVL,course.COURSE_ID, course.COURSE_TITLE,
		rec_meas.MOST_RECENT_MEAS, rec_est.MOST_RECENT_EST,
		enrollee.ENROLLEE_COUNT, graph_nbhd.STD_COUNT_COURSE AS GRAPH_NBHD_STDS,
		apstudm.AVG_PCT_STD_MEAS, apstdm.AVG_PCT_STUD_MEAS, apec.AVG_PCT_EVID_COVG, 
		est_cvg.AVG_PCT_EST_COVG, course.TENANT_ID ,apec.SIH_COURSEPK_ID
FROM AVG_PCT_EVID_COVG apec
JOIN AVG_PCT_STD_MEAS apstudm ON apstudm.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN AVG_PCT_STUD_MEAS apstdm ON apstdm.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN ENROLLEE_COUNT enrollee ON enrollee.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN STD_COUNT_COURSE graph_nbhd ON graph_nbhd.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN IBMSIH.SIHCOURSE course ON course.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN (SELECT org.TENANT_ID, org.NAME
	FROM IBMSIH.SIHORG org 
	WHERE org.ORG_TYPE = 'District') AS org_name
	ON org_name.TENANT_ID = course.TENANT_ID
LEFT JOIN AVG_PCT_EST_COVG est_cvg ON est_cvg.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
LEFT JOIN MOST_RECENT_EST rec_est ON rec_est.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN COURSE_GRADE_LVL grade ON grade.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN SUBJECT_TITLE subj ON subj.SIH_COURSEPK_ID = apec.SIH_COURSEPK_ID
JOIN MOST_RECENT_MEAS rec_meas ON rec_meas.SIH_COURSEPK_ID =  apec.SIH_COURSEPK_ID
WHERE course.TENANT_ID NOT IN ('T001','T014')
ORDER BY subj.SUBJECT_TITLE, course.SIH_COURSEPK_ID