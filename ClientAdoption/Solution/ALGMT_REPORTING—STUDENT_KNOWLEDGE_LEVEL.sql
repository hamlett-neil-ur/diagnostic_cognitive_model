
-- STUDENT_KNOWLEDGE_LEVEL table
WITH FIRST_STAGE (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT lsh.CONSTITUENT_LEARNING_STD_ID, lsh.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID
		FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		JOIN IBMSIH.SIHLEARNING_STANDARD_HIERARCHY lsh ON lsh.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT std_cont ON std_cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
		WHERE lsh.GRAPH_TYPE IN ('PROGRESSION', 'UNPACKED')
			AND clsm.TENANT_ID = :tenant_id
			AND lsh.TENANT_ID = :tenant_id
		ORDER BY clsm.SIH_COURSEPK_ID, lsh.CONSTITUENT_LEARNING_STD_ID, lsh.LEARNING_STANDARD_ID),
	SECOND_STAGE  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.LEARNING_STANDARD_ID
		WHERE prog.GRAPH_TYPE IN ('PROGRESSION', 'UNPACKED')
		ORDER BY FIRST_STAGE.SIH_COURSEPK_ID, prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID),
	EXTEND_UP  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.CONSTITUENT_LEARNING_STD_ID
		WHERE prog.GRAPH_TYPE = 'UNPACKED'
			AND prog.TENANT_ID = :tenant_id
		ORDER BY FIRST_STAGE.SIH_COURSEPK_ID, prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID),
	COURSE_GRAPH_EDGES (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT * FROM SECOND_STAGE UNION
		SELECT * FROM EXTEND_UP UNION
		SELECT * FROM EXTEND_UP UNION
		SELECT * FROM FIRST_STAGE),
	COURSE_GRAPH_VERTICES (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT cge.CONSTITUENT_LEARNING_STD_ID AS LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge UNION
		SELECT cge.LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge),
	GRAPH_VERTS_SINGLETONS (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT verts.LEARNING_STANDARD_ID, verts.SIH_COURSEPK_ID FROM COURSE_GRAPH_VERTICES verts UNION
		SELECT clsm.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		WHERE clsm.TENANT_ID = :tenant_id),
	COURSE_SUBJECTS (SIH_COURSEPK_ID,  COURSE_SUBJECTS) AS (
		SELECT course_subj.SIH_COURSEPK_ID, 
				LISTAGG(course_subj.SUBJECT_TITLE, ', ') AS COURSE_SUBJECT
		FROM (SELECT DISTINCT verts.SIH_COURSEPK_ID, cont.SUBJECT_TITLE
			FROM GRAPH_VERTS_SINGLETONS verts
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
			ORDER BY verts.SIH_COURSEPK_ID, cont.SUBJECT_TITLE) AS course_subj	
		GROUP BY course_subj.SIH_COURSEPK_ID
		ORDER BY course_subj.SIH_COURSEPK_ID),
	COURSE_GRADE_LVL (SIH_COURSEPK_ID, COURSE_GRADE_LVL) AS (
		SELECT course_grade.SIH_COURSEPK_ID,
				LISTAGG(course_grade.GRADE_LEVEL, ', ') AS COURSE_GRADE_LVL
		FROM (SELECT DISTINCT clsm.SIH_COURSEPK_ID, cont.GRADE_LEVEL
			FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
			ORDER BY clsm.SIH_COURSEPK_ID, cont.GRADE_LEVEL) AS course_grade
		GROUP BY course_grade.SIH_COURSEPK_ID
		ORDER BY course_grade.SIH_COURSEPK_ID),
	COURSE_ENROLLEES (SIH_COURSEPK_ID, SIH_PERSONPK_ID) AS (
		SELECT DISTINCT crs.SIH_COURSEPK_ID, opr.SIH_PERSONPK_ID
		FROM IBMSIH.SIHCOURSE crs
		JOIN (SELECT sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID, sec.COURSE_SECTION_TITLE,
							sec_day.TERM_START_DATE, sec_day.TERM_END_DATE, sec.SIH_ORGPK_ID
					FROM IBMSIH.COURSE_SECTION sec
					JOIN (SELECT sec_day.COURSE_SECTION_SID, 
								MIN(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_START_DATE,
								MAX(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_END_DATE
							FROM IBMSIH.COURSE_SECTION_DAY sec_day
							GROUP BY sec_day.COURSE_SECTION_SID
							ORDER BY sec_day.COURSE_SECTION_SID) 
										AS sec_day ON sec_day.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
					WHERE sec.IS_ACTIVE_YN = 1
						AND sec_day.TERM_START_DATE < CURRENT_TIMESTAMP
						AND sec_day.TERM_END_DATE > CURRENT_TIMESTAMP
					ORDER BY sec.SIH_ORGPK_ID, sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID ) 
								AS sec ON sec.SIH_COURSEPK_ID = crs.SIH_COURSEPK_ID
		JOIN IBMSIH.COURSE_SECTION_STUDENT stud ON stud.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
		JOIN IBMSIH.SIHORGPERSONROLE opr ON opr.SIH_ORG_PERSON_ROLEPK_ID = stud.SIH_ORG_PERSON_ROLEPK_ID
			WHERE stud.IS_ACTIVE_YN = 1
			AND stud.IS_ACTIVE_YN = 1
			AND crs.TENANT_ID = :tenant_id  
		ORDER BY crs.SIH_COURSEPK_ID, opr.SIH_PERSONPK_ID),
	MOST_REC_STATE (SIH_COURSEPK_ID, SIH_PERSONPK_ID, LEARNING_STANDARD_ID, STUDENT_KNOWLEDGE_LVL_SID) AS (
		SELECT enrollees.SIH_COURSEPK_ID, enrollees.SIH_PERSONPK_ID, verts.LEARNING_STANDARD_ID, 
				MAX(skl.STUDENT_KNOWLEDGE_LVL_SID) AS STUDENT_KNOWLEDGE_LVL_SID
		FROM COURSE_ENROLLEES enrollees
		JOIN COURSE_GRAPH_VERTICES verts ON verts.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
		JOIN (SELECT *
			FROM IBMSIH.STUDENT_KNOWLEDGE_LEVEL skl) 
					AS skl ON skl.SIH_PERSONPK_ID_ST = enrollees.SIH_PERSONPK_ID
						AND skl.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
		GROUP BY enrollees.SIH_COURSEPK_ID, enrollees.SIH_PERSONPK_ID, verts.LEARNING_STANDARD_ID
		ORDER BY enrollees.SIH_COURSEPK_ID, enrollees.SIH_PERSONPK_ID, verts.LEARNING_STANDARD_ID)
SELECT org.NAME AS CAMPUS, crs_subj.COURSE_SUBJECTS, crs_grade.COURSE_GRADE_LVL, 
		course.COURSE_ID, course.COURSE_TITLE, sec.COURSE_SECTION_TITLE,
		pers_staff.LAST_NAME AS TEACHER_LNAME, pers_staff.FIRST_NAME AS TEACHER_FNAME, 
		acad.GRADE_ENROLLED, pers_stud.LAST_NAME AS STUDENT_LNAME, pers_stud.FIRST_NAME AS STUDENT_FNAME,
		cont.SUBJECT_TITLE AS LRN_STD_SUBJECT, cont.GRADE_LEVEL AS LRN_STD_GRADE_LVL, 
		std.LEARNING_STANDARD_CD, 
		(CASE WHEN skl.KNOWLEDGE_LEVEL IS NULL THEN 'UNMEASURED' ELSE skl.KNOWLEDGE_LEVEL END) 
						AS KNOWLEDGE_LEVEL,
		(CASE WHEN skl.KNOWLEDGE_LVL_PREVISION IS NULL THEN eol.RAW_SCORE ELSE skl.KNOWLEDGE_LVL_PREVISION END) 
							AS KNOWLEDGE_LVL_PREVISION,
		(CASE WHEN skl.KNOWLEDGE_LVL_TYPE IS NULL THEN 'UNMEASURED' ELSE skl.KNOWLEDGE_LVL_TYPE END) 
							AS KNOWLEDGE_LVL_TYPE,
		(CASE WHEN clsm.COURSE_LEARNING_STD_MAP_SID IS NULL THEN 'PROR_YEAR_LEARNING_STD' 
				ELSE 'CURRENT_YEAR_LEARNING_STD' END) 
							AS LEARNING_STD_IN_CURRENT_AY,
		CAST(CAST( skl.KNOWLEDGE_LVL_ASOF_DATE AS DATE) AS VARCHAR)  AS KNOWLEDGE_LVL_ASOF_DATE,
		std.MEASUREABLE_STANDARD_YN, enrollees.SIH_PERSONPK_ID, verts.LEARNING_STANDARD_ID, enrollees.SIH_COURSEPK_ID,
		sec.COURSE_SECTION_SID, rec_state.STUDENT_KNOWLEDGE_LVL_SID,  
		CAST(CAST( skl.LAST_UPDATE_DT AS DATE) AS VARCHAR)  AS DATE_MEASUREMENT_LOADED,
		enrollees.SIH_COURSEPK_ID || '_' || enrollees.SIH_PERSONPK_ID || '_' || verts.LEARNING_STANDARD_ID AS PROFICIENCY_SPACE_TUPLE
FROM COURSE_ENROLLEES enrollees
JOIN IBMSIH.SIHORGPERSONROLE opr_stud ON opr_stud.SIH_PERSONPK_ID = enrollees.SIH_PERSONPK_ID
JOIN IBMSIH.SIHPERSON pers_stud ON pers_stud.SIH_PERSONPK_ID = enrollees.SIH_PERSONPK_ID
JOIN IBMSIH.SIHCOURSE course ON course.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
JOIN  IBMSIH.COURSE_SECTION sec ON sec.SIH_COURSEPK_ID = course.SIH_COURSEPK_ID
JOIN (SELECT *
	FROM IBMSIH.COURSE_SECTION_STUDENT sec_stud
	ORDER BY sec_stud.COURSE_SECTION_SID, sec_stud.SIH_ORG_PERSON_ROLEPK_ID) 
								AS sec_stud ON sec_stud.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
											AND sec_stud.SIH_ORG_PERSON_ROLEPK_ID = opr_stud.SIH_ORG_PERSON_ROLEPK_ID
JOIN IBMSIH.COURSE_SECTION_STAFF sec_staff ON sec_staff.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
JOIN IBMSIH.SIHORGPERSONROLE opr_staff ON opr_staff.SIH_ORG_PERSON_ROLEPK_ID = sec_staff.SIH_ORG_PERSON_ROLEPK_ID
JOIN IBMSIH.SIHPERSON pers_staff ON pers_staff.SIH_PERSONPK_ID = opr_staff.SIH_PERSONPK_ID
JOIN IBMSIH.SIHORG org ON org.SIH_ORGPK_ID = sec.SIH_ORGPK_ID
JOIN GRAPH_VERTS_SINGLETONS verts ON verts.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
JOIN COURSE_SUBJECTS crs_subj ON crs_subj.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
JOIN COURSE_GRADE_LVL crs_grade ON crs_grade.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
JOIN (SELECT acad.SIH_ORG_PERSON_ROLEPK_ID_ST AS SIH_ORG_PERSON_ROLEPK_ID, acad.GRADE_ENROLLED
		FROM IBMSIH.SIHK12ACADRECORD acad
		JOIN IBMSIH.ACADEMIC_YEAR_LOOKUP acad_yr ON acad_yr.ACADEMIC_YEAR = acad.SCHOOL_YEAR
		WHERE acad_yr.ACADEMIC_YEAR_START < CURRENT_TIMESTAMP
			AND acad_yr.ACADMEMIC_YEAR_END > CURRENT_TIMESTAMP)
				AS acad ON acad.SIH_ORG_PERSON_ROLEPK_ID = opr_stud.SIH_ORG_PERSON_ROLEPK_ID
LEFT JOIN MOST_REC_STATE rec_state ON rec_state.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
									AND rec_state.SIH_PERSONPK_ID = enrollees.SIH_PERSONPK_ID
									AND rec_state.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
LEFT JOIN IBMSIH.STUDENT_KNOWLEDGE_LEVEL skl ON skl.STUDENT_KNOWLEDGE_LVL_SID = rec_state.STUDENT_KNOWLEDGE_LVL_SID
LEFT JOIN IBMSIH.EVIDENCE_OF_LEARNING eol ON eol.EVIDENCE_OF_LEARNING_SID = skl.EVIDENCE_OF_LEARNING_SID
LEFT JOIN (SELECT clsm.SIH_COURSEPK_ID, clsm.LEARNING_STANDARD_ID, clsm.COURSE_LEARNING_STD_MAP_SID
			FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
			ORDER BY clsm.SIH_COURSEPK_ID, clsm.LEARNING_STANDARD_ID) 
					AS clsm ON clsm.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
						AND clsm.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
WHERE clsm.COURSE_LEARNING_STD_MAP_SID IS NOT NULL
	AND org.SIH_ORGPK_ID = 885
ORDER BY org.NAME, crs_subj.COURSE_SUBJECTS, crs_grade.COURSE_GRADE_LVL, 
		course.COURSE_ID, course.COURSE_TITLE, sec.COURSE_SECTION_TITLE,
		pers_staff.LAST_NAME, pers_stud.LAST_NAME, std.LEARNING_STANDARD_CD
