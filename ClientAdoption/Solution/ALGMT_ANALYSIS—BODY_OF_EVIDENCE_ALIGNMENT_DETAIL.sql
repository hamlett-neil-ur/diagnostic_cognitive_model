
-- Body of Evidence irrespective of intended curriculum.
WITH FIRST_STAGE (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT lsh.CONSTITUENT_LEARNING_STD_ID, lsh.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID
		FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		JOIN IBMSIH.SIHLEARNING_STANDARD_HIERARCHY lsh ON lsh.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT std_cont ON std_cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
		WHERE lsh.GRAPH_TYPE IN ('PROGRESSION', 'UNPACKED')
			AND clsm.TENANT_ID = :tenant_id
		ORDER BY clsm.SIH_COURSEPK_ID, lsh.CONSTITUENT_LEARNING_STD_ID, lsh.LEARNING_STANDARD_ID),
	SECOND_STAGE  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.LEARNING_STANDARD_ID
		WHERE prog.GRAPH_TYPE IN ('PROGRESSION', 'UNPACKED')
		ORDER BY FIRST_STAGE.SIH_COURSEPK_ID, prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID),
	EXTEND_UP  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.CONSTITUENT_LEARNING_STD_ID
		WHERE prog.GRAPH_TYPE = 'UNPACKED' 
		ORDER BY prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID),
	COURSE_GRAPH_EDGES (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT * FROM SECOND_STAGE UNION
		SELECT * FROM EXTEND_UP UNION
		SELECT * FROM FIRST_STAGE),
	COURSE_GRAPH_VERTICES (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT cge.CONSTITUENT_LEARNING_STD_ID AS LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge UNION
		SELECT cge.LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge),
	GRAPH_VERTS_SINGLETONS (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT verts.LEARNING_STANDARD_ID, verts.SIH_COURSEPK_ID FROM COURSE_GRAPH_VERTICES verts UNION
		SELECT clsm.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm),
	COURSE_ENROLLEES (SIH_COURSEPK_ID, SIH_PERSONPK_ID) AS (
		SELECT DISTINCT crs.SIH_COURSEPK_ID, opr.SIH_PERSONPK_ID
		FROM IBMSIH.SIHCOURSE crs
		JOIN (SELECT sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID, sec.COURSE_SECTION_TITLE,
					sec_day.TERM_START_DATE, sec_day.TERM_END_DATE, sec.SIH_ORGPK_ID
				FROM IBMSIH.COURSE_SECTION sec
				JOIN (SELECT sec_day.COURSE_SECTION_SID, 
							MIN(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_START_DATE,
							MAX(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_END_DATE
						FROM IBMSIH.COURSE_SECTION_DAY sec_day
						GROUP BY sec_day.COURSE_SECTION_SID
						ORDER BY sec_day.COURSE_SECTION_SID) 
								AS sec_day ON sec_day.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
				WHERE sec.IS_ACTIVE_YN = 1
					AND sec_day.TERM_START_DATE < CURRENT_TIMESTAMP
					AND sec_day.TERM_END_DATE > CURRENT_TIMESTAMP
					ORDER BY sec.SIH_ORGPK_ID, sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID ) 
							AS sec ON sec.SIH_COURSEPK_ID = crs.SIH_COURSEPK_ID
		JOIN IBMSIH.COURSE_SECTION_STUDENT stud ON stud.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
		JOIN IBMSIH.SIHORGPERSONROLE opr ON opr.SIH_ORG_PERSON_ROLEPK_ID = stud.SIH_ORG_PERSON_ROLEPK_ID
			AND stud.IS_ACTIVE_YN = '1'
			AND crs.TENANT_ID = :tenant_id
		ORDER BY crs.SIH_COURSEPK_ID, opr.SIH_PERSONPK_ID),
	COURSE_SUBJECTS (SIH_COURSEPK_ID,  COURSE_SUBJECTS) AS (
		SELECT course_subj.SIH_COURSEPK_ID, 
				LISTAGG(course_subj.SUBJECT_TITLE, ', ') AS COURSE_SUBJECT
		FROM (SELECT DISTINCT verts.SIH_COURSEPK_ID, cont.SUBJECT_TITLE
			FROM GRAPH_VERTS_SINGLETONS verts
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID) AS course_subj	
		GROUP BY course_subj.SIH_COURSEPK_ID
		ORDER BY course_subj.SIH_COURSEPK_ID),
	COURSE_GRADE_LVL (SIH_COURSEPK_ID, COURSE_GRADE_LVL) AS (
		SELECT course_grade.SIH_COURSEPK_ID,
				LISTAGG(course_grade.GRADE_LEVEL, ', ') AS COURSE_GRADE_LVL
		FROM (SELECT DISTINCT clsm.SIH_COURSEPK_ID, cont.GRADE_LEVEL
			FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID) AS course_grade
		GROUP BY course_grade.SIH_COURSEPK_ID 
		ORDER BY course_grade.SIH_COURSEPK_ID),
	PROG_EXTENSION_UPWARD (SIH_COURSEPK_ID, PROG_EXTENSION_UPWARD) AS (
		SELECT stage1.SIH_COURSEPK_ID, lsh.LEARNING_STANDARD_ID AS PROG_EXTENSION_UPWARD
		FROM (SELECT stage1.SIH_COURSEPK_ID, stage1.CONSTITUENT_LEARNING_STD_ID AS LEARNING_STANDARD_ID 
			FROM FIRST_STAGE stage1 
			UNION
			SELECT stage1.SIH_COURSEPK_ID, stage1.LEARNING_STANDARD_ID 
			FROM FIRST_STAGE stage1 ) AS stage1
		JOIN IBMSIH.SIHLEARNING_STANDARD_HIERARCHY lsh ON lsh.CONSTITUENT_LEARNING_STD_ID = stage1.LEARNING_STANDARD_ID
		WHERE lsh.GRAPH_TYPE = 'Hierarchy'
		ORDER BY stage1.SIH_COURSEPK_ID, lsh.LEARNING_STANDARD_ID),
	PROG_EXTENSION_DOWNWARD (SIH_COURSEPK_ID, PROG_EXTENSION_DOWNWARD) AS (
		SELECT stage1.SIH_COURSEPK_ID, lsh.CONSTITUENT_LEARNING_STD_ID AS PROG_EXTENSION_DOWNWARD
		FROM (SELECT stage1.SIH_COURSEPK_ID, stage1.CONSTITUENT_LEARNING_STD_ID AS LEARNING_STANDARD_ID 
			FROM FIRST_STAGE stage1 
			UNION
			SELECT stage1.SIH_COURSEPK_ID, stage1.LEARNING_STANDARD_ID 
			FROM FIRST_STAGE stage1 ) AS stage1
		JOIN IBMSIH.SIHLEARNING_STANDARD_HIERARCHY lsh ON lsh.LEARNING_STANDARD_ID = stage1.LEARNING_STANDARD_ID
		WHERE lsh.GRAPH_TYPE = 'Hierarchy'
		ORDER BY stage1.SIH_COURSEPK_ID, lsh.CONSTITUENT_LEARNING_STD_ID),
	CURRICULUM_SPAN (SIH_COURSEPK_ID, SIH_PERSONPK_ID, SUBJECT_TITLE, GRADE_LEVEL) AS (
		SELECT DISTINCT enrollees.SIH_COURSEPK_ID, enrollees.SIH_PERSONPK_ID, 
						cont.SUBJECT_TITLE, cont.GRADE_LEVEL
		FROM COURSE_ENROLLEES enrollees
		JOIN GRAPH_VERTS_SINGLETONS verts ON verts.SIH_COURSEPK_ID = enrollees.SIH_COURSEPK_ID
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
		ORDER BY enrollees.SIH_COURSEPK_ID, enrollees.SIH_PERSONPK_ID, 
				cont.SUBJECT_TITLE, cont.GRADE_LEVEL ),
	MOST_REC_MEAS (SIH_PERSONPK_ID, SUBJECT_TITLE, GRADE_LEVEL, LEARNING_STANDARD_CD, WORK_PRODUCT_TITLE,
					RAW_SCORE, ASSESSMENT_DATE, LEARNING_STANDARD_ID, EVIDENCE_OF_LEARNING_SID,
					MEASUREABLE_STANDARD_YN, LAST_EOL_UPDATE) AS (
		SELECT rec_meas.SIH_PERSONPK_ID, cont.SUBJECT_TITLE, cont.GRADE_LEVEL,
				std.LEARNING_STANDARD_CD, rec_meas.WORK_PRODUCT_TITLE,
				eol.RAW_SCORE, eol.ASSESSMENT_DATE,
				rec_meas.LEARNING_STANDARD_ID, rec_meas.EVIDENCE_OF_LEARNING_SID,
				std.MEASUREABLE_STANDARD_YN, rec_meas.LAST_EOL_UPDATE
		FROM (SELECT eol.SIH_PERSONPK_ID_ST AS SIH_PERSONPK_ID, 
					wpls.LEARNING_STANDARD_ID, 
					max(eol.EVIDENCE_OF_LEARNING_SID) AS EVIDENCE_OF_LEARNING_SID,
					MAX(eol.LAST_UPDATE_DT) AS LAST_EOL_UPDATE,
					prod.WORK_PRODUCT_TITLE
				FROM IBMSIH.EVIDENCE_OF_LEARNING eol
				JOIN IBMSIH.WRK_PRDCT_LRNG_STD wpls ON wpls.WORK_PRODUCT_SID = eol.WORK_PRODUCT_SID
				JOIN IBMSIH.WORK_PRODUCT prod ON prod.WORK_PRODUCT_SID = eol.WORK_PRODUCT_SID
				GROUP BY  eol.SIH_PERSONPK_ID_ST, wpls.LEARNING_STANDARD_ID, prod.WORK_PRODUCT_TITLE
				ORDER BY eol.SIH_PERSONPK_ID_ST, wpls.LEARNING_STANDARD_ID, prod.WORK_PRODUCT_TITLE ) AS rec_meas
		JOIN IBMSIH.EVIDENCE_OF_LEARNING eol ON eol.EVIDENCE_OF_LEARNING_SID = rec_meas.EVIDENCE_OF_LEARNING_SID
		JOIN IBMSIH.WORK_PRODUCT prod ON prod.WORK_PRODUCT_SID = eol.WORK_PRODUCT_SID
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = rec_meas.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
		ORDER BY rec_meas.SIH_PERSONPK_ID, cont.SUBJECT_TITLE, cont.GRADE_LEVEL, rec_meas.LEARNING_STANDARD_ID )
SELECT DISTINCT org.NAME AS CAMPUS, crs_subj.COURSE_SUBJECTS, crs_grade.COURSE_GRADE_LVL,
				course.COURSE_ID, course.COURSE_TITLE, sec.COURSE_SECTION_TITLE,
				pers_staff.LAST_NAME AS TEACHER_LNAME, pers_staff.FIRST_NAME AS TEACHER_FNAME, acad.GRADE_ENROLLED,
				pers_stud.PERSON_ID AS STUDENT_ID, pers_stud.LAST_NAME AS STUDENT_LNAME, pers_stud.FIRST_NAME AS STUDENT_FNAME,
				rec_meas.SUBJECT_TITLE AS STANDARD_SUBJECT, rec_meas.GRADE_LEVEL AS STANDARD_GRADE_LVL,
				rec_meas.LEARNING_STANDARD_CD, rec_meas.WORK_PRODUCT_TITLE, 
				rec_meas.RAW_SCORE, rec_meas.ASSESSMENT_DATE,
				(CASE WHEN rec_meas.ASSESSMENT_DATE > '2018-08-01' THEN 'CURRENT_AY_MEASURMENT'
																	ELSE 'PRIOR_AY_MEASUREMENT' END) AS AY_OF_MEASUREMENT,
				(CASE WHEN clsm.SUBJECT_TITLE IS NULL THEN 'PRIOR_AY_LEARNING_STD'
													ELSE 'CURRENT_AY_LEARNING_STD' END) AS LEARNING_STANDARD_AY,
				(CASE WHEN verts.LEARNING_STANDARD_ID IS NOT NULL THEN 'Aligned Standard'
					WHEN ext_up.PROG_EXTENSION_UPWARD IS NOT NULL THEN 'Upward-Extensible'
					WHEN ext_down.PROG_EXTENSION_DOWNWARD IS NOT NULL THEN 'Downward-Extensible'
																		ELSE 'Unaligned Standard' END) AS COURSE_STANDARD_ALIGNMENT,
				rec_meas.MEASUREABLE_STANDARD_YN, curric_span.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID, curric_span.SIH_PERSONPK_ID, 
				rec_meas.LEARNING_STANDARD_ID, rec_meas.LAST_EOL_UPDATE,
		curric_span.SIH_COURSEPK_ID || '_' || curric_span.SIH_PERSONPK_ID || '_' || rec_meas.EVIDENCE_OF_LEARNING_SID AS EVID_TUPLE
FROM CURRICULUM_SPAN curric_span
JOIN MOST_REC_MEAS rec_meas ON rec_meas.SIH_PERSONPK_ID = curric_span.SIH_PERSONPK_ID
							AND rec_meas.SUBJECT_TITLE = curric_span.SUBJECT_TITLE
							AND rec_meas.GRADE_LEVEL = curric_span.GRADE_LEVEL
JOIN IBMSIH.SIHCOURSE course ON course.SIH_COURSEPK_ID = curric_span.SIH_COURSEPK_ID
JOIN COURSE_SUBJECTS crs_subj ON crs_subj.SIH_COURSEPK_ID = course.SIH_COURSEPK_ID
JOIN COURSE_GRADE_LVL crs_grade ON crs_grade.SIH_COURSEPK_ID = course.SIH_COURSEPK_ID
JOIN (SELECT sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID, sec.COURSE_SECTION_TITLE,
			sec_day.TERM_START_DATE, sec_day.TERM_END_DATE, sec.SIH_ORGPK_ID
	FROM IBMSIH.COURSE_SECTION sec
	JOIN (SELECT sec_day.COURSE_SECTION_SID, 
				MIN(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_START_DATE,
				MAX(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_END_DATE
			FROM IBMSIH.COURSE_SECTION_DAY sec_day
			GROUP BY sec_day.COURSE_SECTION_SID
			ORDER BY sec_day.COURSE_SECTION_SID) 
					AS sec_day ON sec_day.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
	WHERE sec.IS_ACTIVE_YN = 1
		AND sec_day.TERM_START_DATE < CURRENT_TIMESTAMP
		AND sec_day.TERM_END_DATE > CURRENT_TIMESTAMP
	ORDER BY sec.SIH_ORGPK_ID, sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID ) 
							AS sec ON sec.SIH_COURSEPK_ID = course.SIH_COURSEPK_ID
JOIN IBMSIH.COURSE_SECTION_STAFF sec_staff ON sec_staff.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
JOIN IBMSIH.SIHORGPERSONROLE opr_staff ON opr_staff.SIH_ORG_PERSON_ROLEPK_ID = sec_staff.SIH_ORG_PERSON_ROLEPK_ID
JOIN IBMSIH.SIHPERSON pers_staff ON pers_staff.SIH_PERSONPK_ID = opr_staff.SIH_PERSONPK_ID
JOIN IBMSIH.SIHORG org ON org.SIH_ORGPK_ID = sec.SIH_ORGPK_ID
JOIN (SELECT opr.SIH_PERSONPK_ID, opr.SIH_ORG_PERSON_ROLEPK_ID
	FROM IBMSIH.SIHORGPERSONROLE opr 
	ORDER BY opr.SIH_PERSONPK_ID) AS opr_stud ON opr_stud.SIH_PERSONPK_ID = curric_span.SIH_PERSONPK_ID 
JOIN (SELECT acad.SIH_ORG_PERSON_ROLEPK_ID_ST AS SIH_ORG_PERSON_ROLEPK_ID, acad.GRADE_ENROLLED
		FROM IBMSIH.SIHK12ACADRECORD acad
		JOIN IBMSIH.ACADEMIC_YEAR_LOOKUP acad_yr ON acad_yr.ACADEMIC_YEAR = acad.SCHOOL_YEAR
		WHERE acad_yr.ACADEMIC_YEAR_START < CURRENT_TIMESTAMP
			AND acad_yr.ACADMEMIC_YEAR_END > CURRENT_TIMESTAMP)
				AS acad ON acad.SIH_ORG_PERSON_ROLEPK_ID = opr_stud.SIH_ORG_PERSON_ROLEPK_ID
JOIN IBMSIH.SIHPERSON pers_stud ON pers_stud.SIH_PERSONPK_ID = curric_span.SIH_PERSONPK_ID
JOIN (SELECT sec_stud.COURSE_SECTION_SID, sec_stud.SIH_ORG_PERSON_ROLEPK_ID
	FROM IBMSIH.COURSE_SECTION_STUDENT sec_stud
	WHERE sec_stud.IS_ACTIVE_YN = 1
	ORDER BY sec_stud.COURSE_SECTION_SID, sec_stud.SIH_ORG_PERSON_ROLEPK_ID) AS sec_stud
			ON sec_stud.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
			AND sec_stud.SIH_ORG_PERSON_ROLEPK_ID = opr_stud.SIH_ORG_PERSON_ROLEPK_ID
LEFT JOIN PROG_EXTENSION_UPWARD ext_up ON ext_up.PROG_EXTENSION_UPWARD = rec_meas.LEARNING_STANDARD_ID
									AND ext_up.SIH_COURSEPK_ID = curric_span.SIH_COURSEPK_ID
LEFT JOIN PROG_EXTENSION_DOWNWARD ext_down ON ext_down.SIH_COURSEPK_ID = curric_span.SIH_COURSEPK_ID
											AND ext_down.PROG_EXTENSION_DOWNWARD = rec_meas.LEARNING_STANDARD_ID
LEFT JOIN (SELECT DISTINCT clsm.SIH_COURSEPK_ID, cont.SUBJECT_TITLE, cont.GRADE_LEVEL
			FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON clsm.LEARNING_STANDARD_ID = std.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
			ORDER BY clsm.SIH_COURSEPK_ID, cont.SUBJECT_TITLE, cont.GRADE_LEVEL)
						AS clsm ON clsm.SIH_COURSEPK_ID = curric_span.SIH_COURSEPK_ID
								AND clsm.SUBJECT_TITLE  = curric_span.SUBJECT_TITLE
								AND clsm.GRADE_LEVEL  = curric_span.GRADE_LEVEL
LEFT JOIN GRAPH_VERTS_SINGLETONS verts ON verts.SIH_COURSEPK_ID = curric_span.SIH_COURSEPK_ID
									AND verts.LEARNING_STANDARD_ID = rec_meas.LEARNING_STANDARD_ID
--WHERE curric_span.SIH_COURSEPK_ID = 6333412354941263900
ORDER BY org.NAME, crs_subj.COURSE_SUBJECTS, crs_grade.COURSE_GRADE_LVL, course.COURSE_ID,
		sec.COURSE_SECTION_TITLE, pers_stud.LAST_NAME, rec_meas.LEARNING_STANDARD_CD,
		rec_meas.LAST_EOL_UPDATE DESC
		
		
			
-- 📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		
		
/*SELECT *
FROM IBMSIH.SIHORG org
WHERE org.TENANT_ID = 'T015'
	AND org.NAME LIKE '%EL%'
	AND org.NAME NOT LIKE '%INACT%'

	
SELECT mcl.MASTERY_LEVEL_NAME, mcl.FROM_THRESHOLD, mcl.TO_THRESHOLD
FROM IBMSIH.MASTERY_COLOR_LIST mcl
WHERE mcl.TENANT_ID = 'T005'
ORDER BY mcl.FROM_THRESHOLD*/
	



			
-- 📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		
		





			
-- 📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		
		





			
			
			
-- 📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		
		





-- 📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		
		


		

		


		

-- 📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		
		


		
		
		
		
--‼️‼️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️📛🛑⛔️‼️#		

		

