--Course-blueprint coverage OF course catalogue.
WITH FIRST_STAGE (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT lsh.CONSTITUENT_LEARNING_STD_ID, lsh.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID
		FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		JOIN IBMSIH.SIHLEARNING_STANDARD_HIERARCHY lsh ON lsh.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
		JOIN IBMSIH.SIHSTANDARD_CONTENT std_cont ON std_cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
			WHERE lsh.GRAPH_TYPE IN ('PROGRESSION', 'UNPACKED')
			AND lsh.TENANT_ID = :tenant_id),
	SECOND_STAGE  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.LEARNING_STANDARD_ID
		WHERE prog.GRAPH_TYPE IN ('PROGRESSION', 'UNPACKED')),
	EXTEND_UP  (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT prog.CONSTITUENT_LEARNING_STD_ID, prog.LEARNING_STANDARD_ID, FIRST_STAGE.SIH_COURSEPK_ID
		FROM IBMSIH.SIHLEARNING_STANDARD_HIERARCHY prog
		JOIN FIRST_STAGE ON FIRST_STAGE.CONSTITUENT_LEARNING_STD_ID = prog.CONSTITUENT_LEARNING_STD_ID
		WHERE prog.GRAPH_TYPE = 'UNPACKED' ),
	COURSE_GRAPH_EDGES (CONSTITUENT_LEARNING_STD_ID, LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT * FROM SECOND_STAGE UNION
		SELECT * FROM EXTEND_UP UNION
		SELECT * FROM FIRST_STAGE),
	COURSE_GRAPH_VERTICES (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT DISTINCT cge.CONSTITUENT_LEARNING_STD_ID AS LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge UNION
		SELECT DISTINCT cge.LEARNING_STANDARD_ID, cge.SIH_COURSEPK_ID FROM COURSE_GRAPH_EDGES cge),
	GRAPH_VERTS_SINGLETONS (LEARNING_STANDARD_ID, SIH_COURSEPK_ID) AS (
		SELECT verts.LEARNING_STANDARD_ID, verts.SIH_COURSEPK_ID FROM COURSE_GRAPH_VERTICES verts UNION
		SELECT clsm.LEARNING_STANDARD_ID, clsm.SIH_COURSEPK_ID FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
		WHERE clsm.TENANT_ID = :tenant_id),
	COURSE_SUBJECTS (SIH_COURSEPK_ID,  COURSE_SUBJECTS) AS (
		SELECT course_subj.SIH_COURSEPK_ID, 
				LISTAGG(course_subj.SUBJECT_TITLE, ', ') AS COURSE_SUBJECT
		FROM (SELECT DISTINCT verts.SIH_COURSEPK_ID, cont.SUBJECT_TITLE
			FROM GRAPH_VERTS_SINGLETONS verts
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID) AS course_subj	
		GROUP BY course_subj.SIH_COURSEPK_ID ),
	COURSE_GRADE_LVL (SIH_COURSEPK_ID, COURSE_GRADE_LVL) AS (
		SELECT course_grade.SIH_COURSEPK_ID,
				LISTAGG(course_grade.GRADE_LEVEL, ', ') AS COURSE_GRADE_LVL
		FROM (SELECT DISTINCT clsm.SIH_COURSEPK_ID, cont.GRADE_LEVEL
			FROM IBMSIH.COURSE_LEARNING_STD_MAP clsm
			JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = clsm.LEARNING_STANDARD_ID
			JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID) AS course_grade
		GROUP BY course_grade.SIH_COURSEPK_ID )
SELECT DISTINCT org.NAME AS CAMPUS, crs_subj.COURSE_SUBJECTS, crs_grade.COURSE_GRADE_LVL, 
				course.COURSE_ID, course.COURSE_TITLE, cont.SUBJECT_TITLE AS STANDARD_SUBJECT, 
				cont.GRADE_LEVEL AS STANDARD_GRADE_LVL,
				std.LEARNING_STANDARD_CD, verts.LEARNING_STANDARD_ID, 
				(CASE WHEN clsm.COURSE_LEARNING_STD_MAP_SID IS NULL THEN 'BLUEPRENT_PREREQUISITE'
																	ELSE 'BLUEPRENT_STANDARD' END) AS BLUEPRINT_ALGNMENT,
				std.MEASUREABLE_STANDARD_YN,
				verts.SIH_COURSEPK_ID, std.JURISDICTION_ID, course.TENANT_ID
FROM COURSE_GRAPH_VERTICES verts
JOIN IBMSIH.SIHLEARNING_STANDARD std ON std.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
JOIN IBMSIH.SIHSTANDARD_CONTENT cont ON cont.STANDARD_CONTENT_ID = std.STANDARD_CONTENT_ID
JOIN IBMSIH.SIHCOURSE course ON course.SIH_COURSEPK_ID = verts.SIH_COURSEPK_ID
JOIN COURSE_SUBJECTS crs_subj ON crs_subj.SIH_COURSEPK_ID = verts.SIH_COURSEPK_ID
JOIN COURSE_GRADE_LVL crs_grade ON crs_grade.SIH_COURSEPK_ID = verts.SIH_COURSEPK_ID
JOIN (SELECT sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID, sec.COURSE_SECTION_TITLE,
			sec_day.TERM_START_DATE, sec_day.TERM_END_DATE, sec.SIH_ORGPK_ID
		FROM IBMSIH.COURSE_SECTION sec
		JOIN (SELECT sec_day.COURSE_SECTION_SID, 
					MIN(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_START_DATE,
					MAX(sec_day.COURSE_SECTION_DAY_DATE) AS TERM_END_DATE
				FROM IBMSIH.COURSE_SECTION_DAY sec_day
				GROUP BY sec_day.COURSE_SECTION_SID
				ORDER BY sec_day.COURSE_SECTION_SID) 
						AS sec_day ON sec_day.COURSE_SECTION_SID = sec.COURSE_SECTION_SID
		WHERE sec.IS_ACTIVE_YN = 1
			AND sec_day.TERM_START_DATE < CURRENT_TIMESTAMP
			AND sec_day.TERM_END_DATE > CURRENT_TIMESTAMP
			ORDER BY sec.SIH_ORGPK_ID, sec.SIH_COURSEPK_ID, sec.COURSE_SECTION_SID ) 
					AS sec ON sec.SIH_COURSEPK_ID = course.SIH_COURSEPK_ID
JOIN IBMSIH.SIHORG org on org.SIH_ORGPK_ID = sec.SIH_ORGPK_ID
LEFT JOIN IBMSIH.COURSE_LEARNING_STD_MAP clsm ON clsm.SIH_COURSEPK_ID = verts.SIH_COURSEPK_ID
											AND clsm.LEARNING_STANDARD_ID = verts.LEARNING_STANDARD_ID
ORDER BY crs_subj.COURSE_SUBJECTS, crs_grade.COURSE_GRADE_LVL, course.COURSE_ID, std.LEARNING_STANDARD_CD



